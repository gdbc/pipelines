openapi: 3.0.0
info:
  title: Basic Auth Example
  version: '1.0'

paths:

  /auth/{user_id}:
    get:
      summary: Return JWT token
      operationId: app.generate_token
      parameters:
      - name: user_id
        description: User unique identifier
        in: path
        required: true
        example: adm_broogra
        schema:
          type: integer
      responses:
        '200':
          description: JWT token
          content:
            'text/plain':
              schema:
                type: string
      security:
      - oauth2: ['secret']
      - basicAuth: []


  /getjwt:
    get:
      summary: Return secret string
      operationId: app.getjwt
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - basicAuth: []

  /secret:
    get:
      summary: Return secret string
      operationId: app.get_secret
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_jwt_user:
    get:
      summary: Return secret string
      operationId: app.get_jwt_user
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /get_envs:
    get:
      summary: Return list of environments
      operationId: app.get_envs
      responses:
        '200':
          description: Return list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_bus:
    get:
      summary: Return list of BU's
      operationId: app.get_bus
      responses:
        '200':
          description: Return list of BU's
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_apps:
    get:
      summary: Return list of App types
      operationId: app.get_apps
      responses:
        '200':
          description: Return list of App types
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_hosts:
    get:
      summary: Return list of Hosts
      operationId: app.get_hosts
      responses:
        '200':
          description: Return list of Hosts
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /createdb:
    get:
      summary: Return secret string
      operationId: app.createdb
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /add_env/{env_id}:
    get:
      summary: Add an environment
      operationId: app.add_env
      parameters:
        - name: env_id
          description: User unique identifier
          in: path
          required: true
          example: d
          schema:
            type: string
      responses:
        '200':
          description: Add an environment
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /add_host/{host_id}:
    get:
      summary: Add an host
      operationId: app.add_hosts
      parameters:
        - name: host_id
          description: Unique hostname 
          in: path
          required: true
          example: pnv-it-lpulp001 
          schema:
            type: string
      responses:
        '200':
          description: Add an host
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /add_app/{app_id}:
    get:
      summary: Add an application type
      operationId: app.add_apps
      parameters:
        - name: app_id
          description: Unique app type
          in: path
          required: true
          example: lora
          schema:
            type: string
      responses:
        '200':
          description: Add an unique app type
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /add_bu/{bu_id}:
    get:
      summary: Add an BU
      operationId: app.add_bus
      parameters:
        - name: bu_id
          description: Unique BU id
          in: path
          required: true
          example: rm
          schema:
            type: string
      responses:
        '200':
          description: Add an BU
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']




  /get_user_envs/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_envs
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /add_user_envs/{user_id}/{env_id}:
    get:
      summary: Add user environment
      operationId: app.add_user_envs
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: env_id
          description: environment 
          in: path
          required: true
          example: p
          schema:
            type: string
      responses:
        '200':
          description: Add a user environment
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /del_user_envs/{user_id}/{env_id}:
    get:
      summary: Delete user environment
      operationId: app.del_user_envs
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: env_id
          description: environment
          in: path
          required: true
          example: p
          schema:
            type: string
      responses:
        '200':
          description: delete a user environment
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /add_user_bus/{user_id}/{bu_id}:
    get:
      summary: Add user BU
      operationId: app.add_user_bus
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: bu_id
          description: environment
          in: path
          required: true
          example: it
          schema:
            type: string
      responses:
        '200':
          description: delete a user bu
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /del_user_bus/{user_id}/{bu_id}:
    get:
      summary: Remove user BU
      operationId: app.del_user_bus
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: bu_id
          description: environment
          in: path
          required: true
          example: it
          schema:
            type: string
      responses:
        '200':
          description: delete a user bu
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /get_user_bus/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_bus
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /get_user_app/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_app
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /add_user_app/{user_id}/{app_id}:
    get:
      summary: Add user apps type
      operationId: app.add_user_app
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: app_id
          description: app type
          in: path
          required: true
          example: lora
          schema:
            type: string
      responses:
        '200':
          description: add a user app type
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /del_user_app/{user_id}/{app_id}:
    get:
      summary: Remove user apps type
      operationId: app.del_user_app
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: app_id
          description: app type
          in: path
          required: true
          example: lora
          schema:
            type: string
      responses:
        '200':
          description: delete a user app type
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /get_user_hosts/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_hosts
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of hosts user can edit
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /del_user_host/{user_id}/{host_id}:
    get:
      summary: Remove user host
      operationId: app.del_user_host
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: host_id
          description: host 
          in: path
          required: true
          example: pnv-it-lrep0001
          schema:
            type: string
      responses:
        '200':
          description: delete a user host
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /add_user_host/{user_id}/{host_id}:
    get:
      summary: Add user host
      operationId: app.add_user_host
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: host_id
          description: host
          in: path
          required: true
          example: pnv-it-lrep0001
          schema:
            type: string
      responses:
        '200':
          description: Add a user host
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


components:
  securitySchemes:
    oauth2:
      type: oauth2
      x-tokenInfoFunc: app.dummy_func
      flows:
        implicit:
          authorizationUrl: https://example.com/oauth2/dialog
          scopes:
            secret: Allow accessing secret

    basicAuth:
      type: http
      scheme: basic
      x-basicInfoFunc: app.basic_auth

    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.decode_token


