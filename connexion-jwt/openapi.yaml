openapi: 3.0.0
info:
  title: Basic Auth Example
  version: '1.0'

paths:

  /auth/{user_id}:
    get:
      summary: Return JWT token
      operationId: app.generate_token
      parameters:
      - name: user_id
        description: User unique identifier
        in: path
        required: true
        example: adm_broogra
        schema:
          type: integer
      responses:
        '200':
          description: JWT token
          content:
            'text/plain':
              schema:
                type: string
      security:
      - oauth2: ['secret']
      - basicAuth: []


  /getjwt:
    get:
      summary: Return secret string
      operationId: app.getjwt
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - basicAuth: []

  /secret:
    get:
      summary: Return secret string
      operationId: app.get_secret
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_jwt_user:
    get:
      summary: Return secret string
      operationId: app.get_jwt_user
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']



  /createdb:
    get:
      summary: Return secret string
      operationId: app.createdb
      responses:
        '200':
          description: secret response
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_user_envs/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_envs
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /add_user_envs/{user_id}/{env_id}:
    get:
      summary: Add user environment
      operationId: app.add_user_envs
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: env_id
          description: environment 
          in: path
          required: true
          example: p
          schema:
            type: string
      responses:
        '200':
          description: Add a user environment
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']


  /del_user_envs/{user_id}/{env_id}:
    get:
      summary: Delete user environment
      operationId: app.del_user_envs
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
        - name: env_id
          description: environment
          in: path
          required: true
          example: p
          schema:
            type: string
      responses:
        '200':
          description: delete a user environment
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']



  /get_user_bus/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_bus
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_user_app/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_app
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']

  /get_user_hosts/{user_id}:
    get:
      summary: Return secret string
      operationId: app.get_user_hosts
      parameters:
        - name: user_id
          description: User unique identifier
          in: path
          required: true
          example: adm_broogra
          schema:
            type: string
      responses:
        '200':
          description: list of environments
          content:
            'text/plain':
              schema:
                type: string
      security:
      - jwt: ['secret']





components:
  securitySchemes:
    oauth2:
      type: oauth2
      x-tokenInfoFunc: app.dummy_func
      flows:
        implicit:
          authorizationUrl: https://example.com/oauth2/dialog
          scopes:
            secret: Allow accessing secret

    basicAuth:
      type: http
      scheme: basic
      x-basicInfoFunc: app.basic_auth

    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.decode_token


